{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a simple Verity reputation API. You can find out more about Verity at <a href='http://getcrystal.net'>http://getcrystal.net</a>  For this sample, you can use the api key 'special-key' for tests that need authorization (authorization filters).\n\nWhere possible we specify multi-hashes as unique identifiers that can be used by distributed cryptographically secure systems (blockchains)\nWhere possible we specify hyper-media links (e.g. JSON-LD) to describe data that is linked in graph structures by nature (blockchain data, IPFS data, etc.)\n\nAgents, Entity and Activity should map to provenance ontology described in https://www.w3.org/TR/prov-o\nTransaction is an implementation that maps to TrustAtoms. https://github.com/CoMakery/trust-exchange/blob/master/README.md",
    "version" : "1.0.0",
    "title" : "VerityReputation",
    "contact" : { },
    "license" : {
      "name" : "not open source yet"
    }
  },
  "security" : [ {
    "Basic Auth" : [ ]
  } ],
  "paths" : {
    "/users/{userId}" : { }
  },
  "securityDefinitions" : {
    "Basic Auth" : {
      "description" : "Basic Authentication for now while we build and test the api",
      "type" : "basic"
    }
  },
  "definitions" : {
    "ActionType" : {
      "type" : "object",
      "required" : [ "ActionName", "id" ],
      "properties" : {
        "ActionName" : {
          "type" : "string"
        },
        "CommunityId" : {
          "type" : "string",
          "description" : "Community that defined this ActionType. Multi-hash or JSON-LD"
        },
        "DefaultPoints" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "points to award in default case"
        },
        "id" : {
          "type" : "string",
          "description" : "multi hash id"
        }
      },
      "description" : "represents the type of action performed when giving reputation, e.g. upvote, points, rating"
    },
    "Activity" : {
      "type" : "object",
      "required" : [ "end", "name", "start" ],
      "properties" : {
        "end" : {
          "type" : "string",
          "format" : "date",
          "description" : "Could correspond to a block number in the blockchain"
        },
        "name" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date",
          "description" : "Could correspond to a block number in the blockchain"
        }
      },
      "description" : "Activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities. \n\nMaps to https://www.w3.org/TR/prov-o/  prov:Activity"
    },
    "Agent" : {
      "type" : "object",
      "required" : [ "hashId" ],
      "properties" : {
        "hashId" : {
          "type" : "string",
          "description" : "hash or blockchain address"
        },
        "key" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string",
          "description" : "URL"
        }
      },
      "description" : "Agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. An Agent could be software, person, organization, device.\n\nMaps to  https://www.w3.org/TR/prov-o/#Agent  prov:Agent"
    },
    "Community" : {
      "type" : "object",
      "properties" : {
        "communityName" : {
          "type" : "string"
        },
        "hashId" : {
          "type" : "string",
          "description" : "blockchain address"
        },
        "oganization" : {
          "$ref" : "#/definitions/Organization"
        }
      }
    },
    "Entity" : {
      "type" : "object",
      "properties" : {
        "hashId" : {
          "type" : "string",
          "description" : "multihash"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the thing"
        },
        "nodes" : {
          "type" : "array",
          "description" : "next level of the tree",
          "items" : {
            "$ref" : "#/definitions/Entity"
          }
        }
      },
      "description" : "Self describing content (document object model, JSON-LD) A physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary.\n\nMaps to https://www.w3.org/TR/prov-o/  prov:Entity"
    },
    "Organization" : {
      "type" : "object",
      "required" : [ "agent", "orgName" ],
      "properties" : {
        "agent" : {
          "$ref" : "#/definitions/Agent"
        },
        "orgName" : {
          "type" : "string"
        }
      }
    },
    "Person" : {
      "type" : "object",
      "required" : [ "agent" ],
      "properties" : {
        "FirstName" : {
          "type" : "string"
        },
        "LastName" : {
          "type" : "string"
        },
        "NickName" : {
          "type" : "string"
        },
        "Organization" : {
          "$ref" : "#/definitions/Organization"
        },
        "agent" : {
          "$ref" : "#/definitions/Agent"
        }
      }
    },
    "SoftwareAgent" : {
      "type" : "object",
      "required" : [ "apiUrl", "name" ],
      "properties" : {
        "apiUrl" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "ownedBy" : {
          "description" : "entity responsible for this SoftwareAgent",
          "$ref" : "#/definitions/Agent"
        }
      }
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "source", "target" ],
      "properties" : {
        "content" : {
          "type" : "string",
          "description" : "describes or defines the type of reputation being given (points, karma, score) or the action performed (action-type) during rating, e.g. upvote, like. Could be a link or content addressable graph pointing to a richer source of description such as a set of tags."
        },
        "context" : {
          "type" : "string",
          "description" : "metadata that describes the way this score was derived, or the community feature that affects the way the value will be interpreted. Could be a link or content addressable graph pointing to a richer source of description or information."
        },
        "source" : {
          "type" : "string",
          "description" : "source / sender / giver of reputation value. Multi-hash agent key. Required."
        },
        "target" : {
          "type" : "string",
          "description" : "target / recipient / receiver of reputation value. Multi-hash agent key. Required."
        },
        "timeStamp" : {
          "type" : "string",
          "description" : "timestamp or block height of blockchain at time of creation. Should be self-describing as to format and meaning."
        },
        "value" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Reputation value or amount. optional. If empty the value of the transaction can be inferred by the content or context, e.g. it's a value tag."
        }
      },
      "description" : "Similar to and should map to TrustAtom https://github.com/CoMakery/trust-exchange/blob/master/README.md\nA fundemental unit of repuation transfer. Represents a singular event that transfers or bestows reputation to the target/recipient. The sender/source can be a person, software agent, organization or the like. Intended to be independent of database or blockchain so all IDs should be globally identifiable hashes in multi-hash format pointing to the canonical representation or permanent public store."
    }
  }
}